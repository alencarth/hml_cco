version: '3.9'

services:
  rabbitmq:
    container_name: rabbitmq-cco
    image: rabbitmq:3-management
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - rabbit_data_cco:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: metrobh
      RABBITMQ_DEFAULT_PASS: '!@UniqHub123'
    restart: always
    networks:
      metro-network:
        ipv4_address: 172.29.0.7
    
  rabbitmqcore:
    container_name: rabbitmqCORE
    image: rabbitmq:3-management
    ports:
      - "5674:5672"
      - "15674:15672"
    volumes:
      - rabbit_data_core:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: '!@Cittamobi123'
    restart: always
    networks:
      metro-network:
        ipv4_address: 172.29.0.5

  mysqlcco:
    container_name: mysqlcco
    image: mysql:latest
    environment:
      #MYSQL_ROOT_PASSWORD: '!@UniqHub123'
      MYSQL_ROOT_PASSWORD: root
    ports:
    - "3309:3306"
    volumes:
      - mysqlcco_data:/var/lib/mysql
      - ./init-scripts/sql:/docker-entrypoint-initdb.d
    restart: always
    networks:
      metro-network:
        ipv4_address: 172.29.0.9
        
  core:
    image: uniqhub.azurecr.io/metro-core-dev:latest
    container_name: core-cco
    environment:
      SPRING_PROFILES_ACTIVE: dev
    ports:
      - "8104:8104"
    restart: on-failure
    networks:
      metro-network:
        ipv4_address: 172.29.0.16

  interfaces-cco:
    image: uniqhub.azurecr.io/metro-interfaces-hml-cco:latest
    container_name: interfaces-cco
    environment:
      SPRING_PROFILES_ACTIVE: homol-cco
    ports:
      - "8102:8102"
    restart: always
    networks:
      metro-network:
        ipv4_address: 172.29.0.15


  interfaces-sso:
    image: uniqhub.azurecr.io/metro-interfaces-hml-cco:latest
    container_name: interfaces-sso
    environment:
      SPRING_PROFILES_ACTIVE: homol
      SERVER_PORT: 8103
    ports:
      - "8103:8103"
    restart: always
    networks:
      metro-network:
        ipv4_address: 172.29.0.14

  frontend-cco:
    image: uniqhub.azurecr.io/metro-operation-hml-cco:latest
    container_name: frontend-cco
    environment:
          API_URL: http://interfaces-cco:8102
    ports:
      - "4200:8200"
    restart: always
    networks:
      metro-network:
        ipv4_address: 172.29.0.13

  frontend-sso:
    image: uniqhub.azurecr.io/metro-operation-hml-sso:latest
    container_name: frontend-sso
    environment:
          API_URL: http://interfaces-sso:8103
    ports:
      - "4201:8200"
    restart: always
    networks:
      metro-network:
        ipv4_address: 172.29.0.12

  redis:
    container_name: redis-cco
    image: redis:latest
    ports:
      - "6380:6379"
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - redis_data:/data
      - ./init-scripts/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    restart: always
    networks:
      metro-network:
        ipv4_address: 172.29.0.10
        
  mongodbcco:
    container_name: mongodbcco
    image: mongo:latest
    ports:
      - "27019:27017"
    volumes:
      - mongodbcco_config_data:/data/configdb
      - mongodbcco_data:/data/db
      - ./init-scripts/mongo:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: metrobh
      MONGO_INITDB_ROOT_PASSWORD: 'UniqHub123'
    restart: always
    networks:
      metro-network:
        ipv4_address: 172.29.0.3

volumes:
  mysqlcco_data:
  rabbit_data_cco:
  redis_data:
  rabbit_data_core:
  portainer_data:
  mongodbcco_config_data:
  mongodbcco_data:

networks:
  metro-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.29.0.0/16
